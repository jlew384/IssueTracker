@using System.Security.Claims;
@using IssueTracker.Helpers;
@model IssueIndexViewModel

@{
}

<div>
    <div class="mb-2">
        <div class="d-flex justify-content-start align-items-center">
            <h1 class="display-4">@Model.ProjectTitle</h1>
            <select class="issue-filter-dropdown form-select-sm mx-3" asp-for="@Model.Filter" asp-items="@new SelectList(IssueFilter.LIST)"></select>
        </div>
        
    </div>
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div class="input-group mb-2" style="width: 250px">
          <input id="issue-search-input" type="text" class="form-control" placeholder="Issue Title">
          <button class="input-group-text" id="issue-search-btn"><i class="bi bi-search"></i></button>
        </div>
        <a class="btn btn-primary mb-2" asp-action="Create" asp-controller="Issue" asp-route-pid="@Model.ProjectId">Create Issue</a>
    </div>   
</div>


<div class="issue-list-container">
    @await Component.InvokeAsync("IssueTable", 
        new {
            userId = Model.UserId,
            projectId = Model.ProjectId,
            filter = Model.Filter,
            sortField = Model.SortField,
            sortDirection = Model.SortDirection,
            searchString = Model.SearchString,
            pageIndex = Model.PageIndex
        })
</div>
