@model Project

@{
    ViewData["Title"] = "Edit Project";
}


<div class="edit-project-container container p-0" asp-controller="Project" asp-action="Edit">
    <div class="my-2 mx-1 d-flex align-items-center justify-content-between">
        <span class="h6 text-muted">Edit Project</span>
        <a class="btn btn-sm btn-primary" href="@ViewBag.BackUrl">Back</a>
    </div> 

    <div class="card box-shadow shadow">        
        <div class="card-body">
            <div>
                <div class="display-title-container">
                    <div class="d-flex justify-content-between">
                        <div>
                            <span class="align-middle h5">Project Title</span>
                            <i tag="btn-edit-title" role="button" class="text-muted bi bi-pencil-fill mx-1 align-bottom"></i>
                        </div>
                    </div>
                    
                    <span class="display-title fs-4 d-block my-2">@Model.Title</span>   
                </div>
                
                               
                <div class="edit-title-container" hidden>
                    <span class="align-middle h5">Project Title</span>
                    <input class="edit-title-input form-control fs-4 my-2" projectId="@Model.Id" value="@Model.Title" />
                    <div class="my-2">
                        <button tag="edit-title-submit" class="btn-sm btn-primary">Submit</button>
                        <button tag="edit-title-cancel" class="btn-sm btn-secondary">Cancel</button>
                    </div>                
                </div>
            </div>
            
            
        </div>
    </div>

    <div class="card box-shadow shadow mt-3">
        <div class="card-body">
            <div class="display-desc-container">
                <span class="align-middle h5">Description</span>
                <i tag="btn-edit-desc" role="button" class="text-muted bi bi-pencil-fill align-bottom mx-1"></i>
                <span class="display-desc d-block my-2">@Model.Desc</span>
            </div>
            
            <div class="edit-desc-container" hidden>
                <span class="align-middle h5">Description</span>
                <textarea projectId="@Model.Id" class="edit-desc-input form-control my-2" rows="3">@Model.Desc</textarea>

                <div class="my-3">
                    <button tag="edit-desc-submit" class="btn-sm btn-primary">Submit</button>
                    <button tag="edit-desc-cancel" class="btn-sm btn-secondary">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="card box-shadow shadow mt-3">
        <div class="card-body">
            <div class="d-flex justify-content-start align-items-center">
                <h5 class="align-middle">Assigned Users</h5>
                <button tag="add-users-btn" type="button" class="ms-2 btn btn-sm btn-primary" data-toggle="modal">
                  Add Users
                </button>
                <button tag="remove-users-btn" type="button" class="ms-2 btn btn-sm btn-primary" data-toggle="modal">
                  Remove Users
                </button>                
            </div>
            <div id="project-members-table">
                @await Component.InvokeAsync("UserTable", new {
                    filter = UserFilter.IN_PROJECT,
                    projectId = Model.Id
                })
            </div>
        </div>
    </div>    

    <div class="modal col-10" id="remove-users-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                <h5 class="modal-title">Remove Users From Project</h5>
                </div>
                    <div id="remove-users-table" class="modal-body">
                        @await Component.InvokeAsync("UserTable", new {
                            filter = UserFilter.IN_PROJECT,
                            projectId = Model.Id,
                            isSelectable = true
                        })
                    </div>
                <div class="modal-footer">
                    <button tag="confirm-remove-btn" projectId="@Model.Id" type="submit" class="btn btn-primary">Save Changes</button>  
                    <button tag="cancel-remove-btn" type="button" class="btn btn-secondary">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="add-users-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div id="add-user-table" class="modal-content">
                <div class="modal-header">
                <h5 class="modal-title">Add Users To Project</h5>
                </div>
                    <div id="add-users-table" class="modal-body">
                        @await Component.InvokeAsync("UserTable", new {
                            filter = UserFilter.NOT_IN_PROJECT,
                            projectId = Model.Id,
                            isSelectable = true
                        })
                    </div>
                <div class="modal-footer">
                    <button tag="confirm-add-btn" projectId="@Model.Id" type="submit" class="btn btn-primary">Save Changes</button>
                    <button tag="cancel-add-btn" type="button" class="btn btn-secondary">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
