@model ProjectIssuesViewModel

@{
    ViewData["Title"] = "Project Details";
}
<div class="card m-2">
    <div class="card-header">
        <div class="d-flex flex-row justify-content-between align-content-center">
            <h1>
                @Html.DisplayFor(model => model.Project.Title)
            </h1>     
            <div>
                <a class="text-muted h4 m-1" asp-action="Edit" asp-route-pid="@Model.Project.Id"><i class="bi bi-pencil-fill"></i></a>
                <a class="text-muted h4 m-1" asp-action="Delete" asp-route-pid="@Model.Project.Id"><i class="bi bi-trash2-fill"></i></a>
            </div>
        </div>
        
    </div>
    <div class="card-body">
        <h6>
            @Html.DisplayNameFor(model => model.Project.Desc)
        </h6>
        <p class="mb-5">
            @Html.DisplayFor(model => model.Project.Desc)
        </p>
        <h6>
            @Html.DisplayNameFor(model => model.Project.DateCreated)
        </h6>
        <p>
            @Html.DisplayFor(model => model.Project.DateCreated)
        </p>
        <h6>
            @Html.DisplayNameFor(model => model.Project.DateModified)
        </h6>
        <p>
            @Html.DisplayFor(model => model.Project.DateModified)
        </p>
    </div>
</div>

<div id="issues-container" class="m-2">
</div>

@section scripts {
    <script>
let components = {
    issueLists: {
        default: {
            type: 'GET',
            url: "@Url.Action("IssueList", "Issue")",
            data: {
                type: "default",
                sortOrder: "@IssueSortOrder.CREATED_DATE_DESC",
                searchString: "",
                pageIndex: 1,
                pid: @Model.Project.Id,
            },
            success: function(result) {
                $('#issues-container').html(result);
            }
        }      
    }
}

function sortIssueList(sortOrder) {
    if (sortOrder == components.issueLists.default.data.sortOrder) {
        sortOrder += "_DESC";
    }
    components.issueLists.default.data.sortOrder = sortOrder;
    $.ajax(components.issueLists.default);
}

function searchIssueList() {
    components.issueLists.default.data.searchString = $('#issues-container').find('.search-input').val();
    $.ajax(components.issueLists.default);
}

function selectPage(pageIndex) {
    components.issueLists.default.data.pageIndex = pageIndex;
    $.ajax(components.issueLists.default);
}

$(document).ready(function() {
    $.ajax(components.issueLists.default);
})
    </script>
}




