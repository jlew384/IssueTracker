@model Project

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <hr />
    <h4>Project</h4>    
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Desc)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Desc)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateModified)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateModified)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<hr />

<div id="issues-container">
    <partial name="_IssueListPartial" model='new IssueListViewModel { Title = "Issues", ProjectId = Model.Id }'></partial>
</div>

@section scripts {
    <script>
        $(document).ready(function() {

            $('#issues-container').find('.sort-btn').click(function() {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("IssueList", "Issue")",
                    data: { pid: @Model.Id, sortOrder: $(this).attr('sort-order')},
                    success: function(result) {  
                        $('#issues-container').find('.component-container').html(result);
                    }
                })
            });
        })
    </script>
}




