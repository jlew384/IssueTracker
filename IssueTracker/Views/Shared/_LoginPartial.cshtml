@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string role;

    if(User.IsInRole(UserRoles.ADMIN))
    {
        role = UserRoles.ADMIN;
    }
    else if(User.IsInRole(UserRoles.PROJ_MNGR)) {
        role = UserRoles.PROJ_MNGR;
    }
    else if(User.IsInRole(UserRoles.DEV)) {
        role = UserRoles.DEV;
    }
    else {
        role = UserRoles.SUB;
    }
}




<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{

    <li class="nav-item">
        <a  class="nav-link text-light btn btn-link">@User.Identity?.Name (@role)</a>
    </li>
    <li class="nav-item">
        <form  class="" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Project", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
