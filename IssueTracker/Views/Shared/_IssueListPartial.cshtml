@using System.Security.Claims;
@model IssueListViewModel

@{
    string userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
    var ownerClaimValues = User.Claims
         .Where(c => c.Type == UserClaimTypes.PROJECT_OWNER)
         .Select(c => Int32.Parse(c.Value))
         .ToList();
}

<div class="card shadow">
    <div class="card-header">
        <h3>@Model.Title</h3>
    </div>
    <div class="card-body">
        <table class="table table-hover table-resposive">
            <thead>
                <tr>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.TITLE">
                        @Html.DisplayNameFor(model => model.Issue.Title)
                        </a>
                    </th>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.STATUS">
                        @Html.DisplayNameFor(model => model.Issue.Status)
                        </a>
                    </th>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.PRIORITY">
                        @Html.DisplayNameFor(model => model.Issue.Priority)
                        </a>
                    </th>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.TYPE">
                        @Html.DisplayNameFor(model => model.Issue.Type)
                        </a>
                    </th>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.ASSIGNED_USER_NAME">
                        @Html.DisplayNameFor(model => model.Issue.AssignedUser)
                        </a>
                    </th>
                    <th>
                        <a class="sort-btn" sort-order="@IssueSortOrder.CREATED_DATE">
                        @Html.DisplayNameFor(model => model.Issue.Created)
                        </a>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="component-container">
                @await Component.InvokeAsync("IssueList",  
                new {
                    pid=Model?.ProjectId,
                    lastSortOrder=IssueSortOrder.CREATED_DATE_DESC,
                    searchString="",
                    creatorId=@Model.CreatorId,
                    assignedId=@Model.AssignedUserId
                })
            </tbody>
        </table>
    </div>
</div>



